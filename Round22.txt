//Create new file
const express=require('express');
const mongoose=require('mongoose');
const bodyParser=require('body-parser');
const core=require('cors');

const app=express();
const port=process.env.PORT || 3000;
const db=mongoose.connection;
const uri='mongodb://localhost/fooddb';


mongoose,connect(uri,{
useNewUrlParser:true,
useUnifiedTopology:true,
useCreateIndex:true,
});
db.on('error',console.error.bind(console,'connection error:'));
db.once('open',function(){
console.log('connected to MongoDB);
});


const foodSchema=new mongoose,Schema({
name:String,
description:String,
price:Number,
image:String,
});
const Food=mongoose.model('Food', foodSchema);


app.use(bodyParser.urlencoded({extended:false}));
app.use(bodyParser.json());
app.use(cores());


app.post('/api/foods',function(req,res){
const food=new Food({
name:req.body.name,
description:req.body.description,
price:req.body.price,
image:req.body.image,
});

food.save(function(err){
if(err){
console.log(err);
res.status(500).send('Error creating food item');
}
else
{
res.ststus(201),send(food);
}
});
});


app.get(/'api/foods', function(req,res){
Food.find({},function(err,foods){
if(err){
console.log(err);
res.status(500).send('error reading food items');
}
else{
res.status(200).send(foods);
}
});
});


app.get(/'api/foods', function(req,res){
Food.find({},function(err,foods){
if(err){
console.log(err);
res.status(500).send('error reading food items');
}
else{
res.status(200).send(foods);
}
});
});

app.post('/api/foods',function(req,res){
const food=new Food({
name:req.body.name,
description:req.body.description,
price:req.body.price,
image:req.body.image,
});

food.save(function(err){
if(err){
console.log(err);
res.status(500).send('Error creating food item');
}
else
{
res.ststus(201),send(food);
}
});



